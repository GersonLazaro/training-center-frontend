{"version":3,"sources":["app.js","environment.js","main.js","config/api.js","config/config.js","config/messages.js","models/models.js","models/user-login.js","models/user-reset.js","models/user-signin.js","resources/index.js","services/alert.js","services/auth.js","services/http.js","services/jwt.js","services/services.js","modules/error-404/error-404.js","modules/home/home.js","modules/login/login.js","modules/recovery/recovery-password.js","modules/recovery/reset-password.js","modules/signin/signin.js","resources/elements/loading-indicator.js"],"names":["App","inject","httpService","configureRouter","config","router","title","addPipelineStep","AuthorizeStep","map","name","route","moduleId","layoutView","settings","roles","authService","run","navigationInstruction","next","getAllInstructions","some","i","indexOf","isAdmin","isCoach","isStudent","isVisitor","cancel","debug","testing","configure","Promise","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","timeout","developmentLogging","start","then","setRoot","API","apiUrl","endponts","auth","users","recovery","reset","tokenName","MESSAGES","loginWrongData","text","type","loginIncompleteData","signInCorrect","signInWrongData","signInIncompleteData","signInDifferentPasswords","recoveryEmailSent","recoveryMailDoesNotExist","recoveryInvalidToken","recoveryDifferentPasswords","recoveryCorrect","serverError","unknownError","permissionsError","UserLogIn","email","password","UserReset","confirmPassword","token","UserSignIn","username","code","globalResources","Alert","notificationService","showMessage","message","info","danger","success","warning","Auth","jwtService","user","httpClient","fetch","method","body","JSON","stringify","checkStatus","parseJSON","registerStudent","requestRecovery","validateReset","resetPassword","logout","window","localStorage","authorization","isAuthenticated","getUserType","Http","useStandardConfiguration","withBaseUrl","response","status","error","Error","statusText","json","Jwt","getItem","tokenExists","data","parse","atob","split","save","setItem","remove","removeItem","getUsername","getUserId","sub","usertype","Error404","Home","Login","authorizationService","alertService","login","navigate","catch","RecoveryPassword","console","log","ResetPassword","tokenValid","activate","params","routeConfig","requestResetPassword","Signin","signin","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { Redirect } from 'aurelia-router'\nimport { Auth, Http } from 'services/services'\n\nexport class App {\n  static inject () {\n    return [Http]\n  }\n  constructor (httpService) {\n    this.httpService = httpService\n  }\n  configureRouter (config, router) {\n    config.title = 'UFPS Training Center'\n    config.addPipelineStep('authorize', AuthorizeStep)\n    config.map([\n      // Login\n      {\n        name: 'login',\n        route: 'iniciar-sesion',\n        moduleId: './modules/login/login',\n        title: 'Iniciar Sesión',\n        layoutView: './layouts/not-logged.html',\n        settings: {\n          roles: ['visitor']\n        }\n      },\n      // Signin\n      {\n        name: 'signin',\n        route: 'registro',\n        moduleId: './modules/signin/signin',\n        title: 'Regístrate',\n        layoutView: './layouts/not-logged.html',\n        settings: {\n          roles: ['visitor']\n        }\n      },\n      // Recovery Password\n      {\n        name: 'recovery-password',\n        route: 'recuperar-password',\n        moduleId: './modules/recovery/recovery-password',\n        title: 'Recuperar Contraseña',\n        layoutView: './layouts/not-logged.html',\n        settings: {\n          roles: ['visitor']\n        }\n      },\n      // Reset Password\n      {\n        name: 'reset-password',\n        route: 'cambiar-password/:token',\n        moduleId: './modules/recovery/reset-password',\n        title: 'Recuperar Contraseña',\n        layoutView: './layouts/not-logged.html',\n        settings: {\n          roles: ['visitor']\n        }\n      },\n      // Home\n      {\n        name: 'home',\n        route: '',\n        moduleId: './modules/home/home',\n        settings: {\n          roles: ['admin', 'coach', 'student']\n        }\n      }\n    ])\n    this.router = router\n  }\n}\n\nclass AuthorizeStep {\n  static inject () {\n    return [Auth]\n  }\n\n  constructor (authService) {\n    this.authService = authService\n  }\n  run (navigationInstruction, next) {\n    if (navigationInstruction.getAllInstructions().some(i => i.config.settings.roles.indexOf('admin') !== -1)) {\n      if (this.authService.isAdmin()) {\n        return next()\n      }\n    }\n    if (navigationInstruction.getAllInstructions().some(i => i.config.settings.roles.indexOf('coach') !== -1)) {\n      if (this.authService.isCoach()) {\n        return next()\n      }\n    }\n    if (navigationInstruction.getAllInstructions().some(i => i.config.settings.roles.indexOf('student') !== -1)) {\n      if (this.authService.isStudent()) {\n        return next()\n      }\n    }\n\n    if (navigationInstruction.getAllInstructions().some(i => i.config.settings.roles.indexOf('visitor') !== -1)) {\n      if (!this.authService.isVisitor()) {\n        return next.cancel(new Redirect(''))\n      } else {\n        return next()\n      }\n    }\n    if (this.authService.isVisitor()) {\n      return next.cancel(new Redirect('iniciar-sesion'))\n    } else {\n      return next.cancel(new Redirect(''))\n    }\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment'\nimport 'fetch'\n\n// Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n})\n\nexport function configure (aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-notify', settings => {\n      settings.timeout = 7000\n    })\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging()\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing')\n  }\n\n  aurelia.start().then(() => aurelia.setRoot())\n}\n","export let API = {\n  // API\n  apiUrl: 'http://demo9817161.mockable.io/',\n  endponts: {\n    auth: 'auth',\n    users: 'users',\n    recovery: 'recovery',\n    reset: 'reset'\n  },\n\n  // SESSION\n  tokenName: 'Authorization'\n}\n","export * from './api'\nexport * from './messages'\n","export let MESSAGES = {\n  // LOGIN\n  loginWrongData: {\n    text: 'Sus datos no coinciden. Inténtalo de nuevo',\n    type: 'error'\n  },\n  loginIncompleteData: {\n    text: 'Ingrese un usuario y contraseña para iniciar sesión',\n    type: 'warning'\n  },\n\n  // SIGNIN\n  signInCorrect: {\n    text: 'Su cuenta se ha creado exitosamente.',\n    type: 'success'\n  },\n  signInWrongData: {\n    text: 'Hay un error con sus datos. Verifícalos y vuelve a intentarlo',\n    type: 'error'\n  },\n  signInIncompleteData: {\n    text: 'Hay campos obligatorios sin llenar. Complétalos para registrar correctamente',\n    type: 'warning'\n  },\n  signInDifferentPasswords: {\n    text: 'Las contraseñas no coinciden',\n    type: 'warning'\n  },\n\n  // RECOVERY\n  recoveryEmailSent: {\n    text: 'Se ha enviado un mensaje a su correo para proceder a la recuperación de su contraseña',\n    type: 'success'\n  },\n  recoveryMailDoesNotExist: {\n    text: 'Este email no ha sido registrado en la plataforma',\n    type: 'error'\n  },\n  recoveryInvalidToken: {\n    text: 'Link invalido. Verifique el enlace enviado a su correo, e inténtelo de nuevo',\n    type: 'error'\n  },\n  recoveryDifferentPasswords: {\n    text: 'Las contraseñas no coinciden',\n    type: 'warning'\n  },\n  recoveryCorrect: {\n    text: 'Su contraseña se ha cambiado exitosamente',\n    type: 'success'\n  },\n  // GENERAL\n  serverError: {\n    text: 'Ha ocurrido un error interno. Lo sentimos. Vuelve a intentarlo mas tarde',\n    type: 'error'\n  },\n  unknownError: {\n    text: 'Lo sentimos. Ha ocurrido un error',\n    type: 'error'\n  },\n  permissionsError: {\n    text: 'Usted no tiene permisos para realizar esta acción',\n    type: 'error'\n  }\n}\n","export * from './user-login'\nexport * from './user-reset'\nexport * from './user-signin'\n","/**\n * Modelo que define los usuarios que utilizan la aplicación\n * @class User\n */\nexport class UserLogIn {\n  /**\n   * Crea una instancia del tipo usuario, al iniciar sesión o registrarse.\n   * @param {string} [email=null]\n   * @param {string} [password=null]\n   */\n  constructor (email = null, password) {\n    this.email = email\n    this.password = password\n  }\n}\n","/**\n * Modelo que define los usuarios que utilizan la aplicación\n * @class User\n */\nexport class UserReset {\n  /**\n   * Crea una instancia del tipo usuario, al iniciar sesión o registrarse.\n   * @param {string} [email=null]\n   * @param {string} [password=null]\n   * @param {string} [confirmPassword=null]\n   */\n  constructor (email = null, password = null, confirmPassword = null, token) {\n    this.email = email\n    this.password = password\n    this.confirmPassword = confirmPassword\n    this.token = token\n  }\n}\n","/**\n * Modelo que define los usuarios que utilizan la aplicación\n * @class User\n */\nexport class UserSignIn {\n  /**\n   * Crea una instancia del tipo usuario, al iniciar sesión o registrarse.\n   * @param {string} [email=null]\n   * @param {string} [password=null]\n   * @param {string} [confirmPassword=null]\n   * @param {string} [name=null]\n   * @param {string} [username=null]\n   * @param {number} [code=null]\n   */\n  constructor (email = null, password = null, confirmPassword = null, name = null, username = null, code = null, type = null) {\n    this.email = email\n    this.password = password\n    this.confirmPassword = confirmPassword\n    this.name = name\n    this.username = username\n    this.code = code\n    this.type = type\n  }\n}\n","export function configure (config) {\n  config.globalResources(['./elements/loading-indicator'])\n}\n","import { NotificationService } from 'aurelia-notify'\n\nexport class Alert {\n  static inject () {\n    return [NotificationService]\n  }\n\n  constructor (notificationService) {\n    this.notificationService = notificationService\n  }\n\n  showMessage (message) {\n    if (message.type === 'info') {\n      this.notificationService.info(message.text)\n    } else if (message.type === 'error') {\n      this.notificationService.danger(message.text)\n    } else if (message.type === 'success') {\n      this.notificationService.success(message.text)\n    } else if (message.type === 'warning') {\n      this.notificationService.warning(message.text)\n    }\n  }\n}\n","import { API } from 'config/config'\nimport { Http } from 'services/http'\nimport { Jwt } from 'services/jwt'\n\nexport class Auth {\n\n  static inject () {\n    return [Http, Jwt]\n  }\n\n  constructor (httpService, jwtService) {\n    this.httpService = httpService\n    this.jwtService = jwtService\n  }\n  auth (user) {\n    return this.httpService.httpClient\n      .fetch(API.endponts.auth, {\n        method: 'post',\n        body: JSON.stringify(user)\n      })\n      .then(this.httpService.checkStatus)\n      .then(this.httpService.parseJSON)\n  }\n\n  registerStudent (user) {\n    return this.httpService.httpClient\n      .fetch(API.endponts.users, {\n        method: 'post',\n        body: JSON.stringify(user)\n      })\n      .then(this.httpService.checkStatus)\n      .then(this.httpService.parseJSON)\n  }\n\n  requestRecovery (email) {\n    return this.httpService.httpClient\n      .fetch(API.endponts.recovery, {\n        method: 'get',\n        body: {email: email}\n      })\n      .then(this.httpService.checkStatus)\n      .then(this.httpService.parseJSON)\n  }\n\n  validateReset (token) {\n    return this.httpService.httpClient\n      .fetch(API.endponts.reset, {\n        method: 'post',\n        body: {token: token}\n      })\n      .then(this.httpService.checkStatus)\n      .then(this.httpService.parseJSON)\n  }\n\n  resetPassword (user) {\n    return this.httpService.httpClient\n      .fetch(API.endponts.reset, {\n        method: 'PATCH',\n        body: JSON.stringify(user)\n      })\n      .then(this.httpService.checkStatus)\n      .then(this.httpService.parseJSON)\n  }\n\n  logout () {\n    window.localStorage[API.tokenName] = null\n    this.authorization = null\n  }\n\n  isAuthenticated () {\n    return this.authorization !== null\n  }\n\n  isStudent () {\n    return this.jwtService.getUserType() === 'student'\n  }\n\n  isCoach () {\n    return this.jwtService.getUserType() === 'coach'\n  }\n\n  isAdmin () {\n    return this.jwtService.getUserType() === 'admin'\n  }\n\n  isVisitor () {\n    return this.jwtService.getUserType() === 'visitor'\n  }\n}\n","import { HttpClient } from 'aurelia-fetch-client'\nimport { API } from 'config/api'\nimport 'fetch'\n\nexport class Http {\n\n  constructor () {\n    this.httpClient = new HttpClient()\n    this.httpClient.configure(config => {\n      config\n        .useStandardConfiguration()\n        .withBaseUrl(API.apiUrl)\n    })\n  }\n\n  checkStatus (response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response\n    } else {\n      var error = new Error(response.statusText)\n      error.response = response\n      throw error\n    }\n  }\n\n  parseJSON (response) {\n    return response.json()\n  }\n\n}\n","import { API } from 'config/config'\n\nexport class Jwt {\n  constructor () {\n    this.token = window.localStorage.getItem(API.tokenName)\n    if (this.tokenExists()) {\n      this.data = JSON.parse(window.atob(this.token.split('.')[1]))\n    } else {\n      this.data = null\n    }\n  }\n\n  save (token) {\n    window.localStorage.setItem(API.tokenName, JSON.stringify(token))\n    this.token = window.localStorage.getItem(API.tokenName)\n    this.data = JSON.parse(window.atob(this.token.split('.')[1]))\n  }\n\n  remove () {\n    window.localStorage.removeItem(API.tokenName)\n    this.token = null\n    this.data = null\n  }\n\n  tokenExists () {\n    return window.localStorage.getItem(API.tokenName) !== null\n  }\n\n  getUsername () {\n    if (!this.tokenExists) {\n      return null\n    } else {\n      return this.data.username\n    }\n  }\n\n  getUserId () {\n    if (!this.tokenExists) {\n      return null\n    } else {\n      return this.data.sub\n    }\n  }\n\n  getUserType () {\n    if (!this.tokenExists()) {\n      return 'visitor'\n    } else {\n      let type = this.data.usertype\n      switch (type) {\n        case '0':\n          return 'student'\n        case '1':\n          return 'coach'\n        case '2':\n          return 'admin'\n      }\n      return 'visitor'\n    }\n  }\n}\n","export * from './alert'\nexport * from './auth'\nexport * from './http'\nexport * from './jwt'\n","export class Error404 {\n\n}\n","\nexport class Home {\n\n}\n","import { Router } from 'aurelia-router'\n\nimport { MESSAGES } from 'config/config'\nimport { UserLogIn } from 'models/models'\nimport { Alert, Auth, Jwt } from 'services/services'\n\nexport class Login {\n  static inject () {\n    return [Auth, Jwt, Router, Alert]\n  }\n  constructor (authorizationService, jwtService, router, alertService) {\n    this.authorizationService = authorizationService\n    this.jwtService = jwtService\n    this.router = router\n    this.alertService = alertService\n    this.user = new UserLogIn()\n  }\n  login () {\n    if (this.user.email !== '' && this.user.password !== '') {\n      this.authorizationService.auth(this.user)\n      .then((data) => {\n        this.jwtService.save(data.token)\n        this.router.navigate('')\n      })\n      .catch(error => {\n        switch (error.status) {\n          case 401:\n            this.alertService.showMessage(MESSAGES.loginWrongData)\n            this.user = new UserLogIn()\n            break\n          case 500:\n            this.alertService.showMessage(MESSAGES.serverError)\n            break\n          default:\n            this.alertService.showMessage(MESSAGES.unknownError)\n        }\n      })\n    } else {\n      this.alertService.showMessage(MESSAGES.loginIncompleteData)\n    }\n  }\n}\n","import { MESSAGES } from 'config/config'\nimport { Alert, Auth } from 'services/services'\n\nexport class RecoveryPassword {\n  static inject () {\n    return [Alert, Auth]\n  }\n  constructor (alertService, authService) {\n    this.alertService = alertService\n    this.authService = authService\n    this.email = ''\n  }\n\n  requestRecovery () {\n    if (this.email !== '') {\n      this.authService.requestRecovery(this.email)\n        .then(data => {\n          this.alertService.showMessage(MESSAGES.recoveryEmailSent)\n        })\n        .catch(error => {\n          switch (error.status) {\n            case 400:\n              this.alertService.showMessage(MESSAGES.recoveryMailDoesNotExist)\n              break\n            case 500:\n              this.alertService.showMessage(MESSAGES.serverError)\n              break\n            default:\n              console.log(error)\n              this.alertService.showMessage(MESSAGES.unknownError)\n          }\n        })\n    }\n  }\n}\n","import { Router } from 'aurelia-router'\n\nimport { MESSAGES } from 'config/config'\nimport { UserReset } from 'models/models'\nimport { Alert, Auth } from 'services/services'\n\nexport class ResetPassword {\n  static inject () {\n    return [Alert, Auth, Router]\n  }\n  constructor (alertService, authorizationService, router) {\n    this.alertService = alertService\n    this.authorizationService = authorizationService\n    this.router = router\n    this.user = new UserReset()\n    this.tokenValid = false\n  }\n\n  activate (params, routeConfig) {\n    this.routeConfig = routeConfig\n    this.user.token = params.token\n    this.authorizationService.validateReset(this.user.token)\n      .then(data => {\n        this.tokenValid = true\n        this.user.email = data.email\n      })\n      .catch(error => {\n        switch (error.status) {\n          case 400:\n            this.alertService.showMessage(MESSAGES.recoveryInvalidToken)\n            this.router.navigate('iniciar-sesion')\n            break\n          case 500:\n            this.alertService.showMessage(MESSAGES.serverError)\n            break\n          default:\n            this.alertService.showMessage(MESSAGES.unknownError)\n        }\n      })\n  }\n\n  requestResetPassword () {\n    if (this.user.password !== '' && this.user.confirmPassword === this.user.password) {\n      this.authorizationService.resetPassword(this.user)\n        .then(data => {\n          this.alertService.showMessage(MESSAGES.recoveryCorrect)\n          this.router.navigate('iniciar-sesion')\n        })\n        .catch(error => {\n          switch (error.status) {\n            case 400:\n              this.alertService.showMessage(MESSAGES.recoveryDifferentPasswords)\n              this.user.password = ''\n              this.user.confirmPassword = ''\n              break\n            case 500:\n              this.alertService.showMessage(MESSAGES.serverError)\n              break\n            default:\n              this.alertService.showMessage(MESSAGES.unknownError)\n          }\n        })\n    } else {\n      this.alertService.showMessage(MESSAGES.recoveryDifferentPasswords)\n      this.user.password = ''\n      this.user.confirmPassword = ''\n    }\n  }\n}\n","import { Router } from 'aurelia-router'\n\nimport { MESSAGES } from 'config/config'\nimport { UserSignIn } from 'models/models'\nimport { Alert, Auth } from 'services/services'\n\nexport class Signin {\n  static inject () {\n    return [Alert, Auth, Router]\n  }\n  constructor (alertService, authorizationService, router) {\n    this.alertService = alertService\n    this.authorizationService = authorizationService\n    this.router = router\n    this.user = new UserSignIn()\n    this.user.type = 0\n  }\n\n  signin () {\n    if (this.user.email != null && this.user.password != null && this.user.confirmPassword != null && this.user.name != null && this.user.username != null && this.user.type != null) {\n      if (this.user.password === this.user.confirmPassword) {\n        this.authorizationService.registerStudent(this.user)\n          .then((data) => {\n            this.alertService.showMessage(MESSAGES.signInCorrect)\n            this.router.navigate('iniciar-sesion')\n          })\n          .catch((error) => {\n            switch (error.status) {\n              case 400:\n                this.alertService.showMessage(MESSAGES.signInWrongData)\n                break\n              case 401:\n                this.alertService.showMessage(MESSAGES.permissionsError)\n                break\n              case 500:\n                this.alertService.showMessage(MESSAGES.serverError)\n                break\n              default:\n                this.alertService.showMessage(MESSAGES.unknownError)\n            }\n          })\n      } else {\n        this.alertService.showMessage(MESSAGES.signInDifferentPasswords)\n        this.user.password = ''\n        this.user.confirmPassword = ''\n      }\n    } else {\n      this.alertService.showMessage(MESSAGES.signInIncompleteData)\n    }\n  }\n}\n","import * as nprogress from 'nprogress'\nimport {bindable, noView, decorators} from 'aurelia-framework'\n\nexport let LoadingIndicator = decorators(\n  noView(['nprogress/nprogress.css']),\n  bindable({name: 'loading', defaultValue: false})\n).on(class {\n  loadingChanged (newValue) {\n    if (newValue) {\n      nprogress.start()\n    } else {\n      nprogress.done()\n    }\n  }\n})\n"],"sourceRoot":"../src"}